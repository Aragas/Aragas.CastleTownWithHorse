name: Publish

on:
  push:
    branches:
      - master

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-module:
    name: Build for NexusMods
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 6.x.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build Aragas.CastleTownWithHorse
      run: >-
        mkdir bannerlord;
        dotnet build src/Aragas.CastleTownWithHorse/Aragas.CastleTownWithHorse.csproj --configuration Release -p:GameFolder="$PWD/bannerlord";
      shell: pwsh

    - name: Upload Bannerlord folder
      uses: actions/upload-artifact@v2
      with:
        name: bannerlord
        path: ./bannerlord/

###########################
#         GITHUB          #
###########################
  publish-on-github:
    name: Publish on GitHub
    runs-on: ubuntu-latest
    needs: ["build-module"]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@master
      with:
        dotnet-version: 6.x.x

    - name: Setup BUTR GPR
      uses: actions/setup-dotnet@master
      with:
        source-url: https://nuget.pkg.github.com/BUTR/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Download bannerlord folder
      uses: actions/download-artifact@v2
      with:
        name: bannerlord
        path: ./bannerlord

    - name: Zip Aragas.CastleTownWithHorse
      run: 7z a -tzip Aragas.CastleTownWithHorse.zip ./bannerlord/*
      #shell: pwsh
      # pwsh casues it to include the root folder

    - name: Install Bannerlord.ChangelogParser
      run: >-
        dotnet tool install -g Bannerlord.ChangelogParser;
      shell: pwsh

    - name: Run ChangelogParser
      id: changelog
      run: |
        vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
        echo "::set-output name=mod_version::$vers"
        desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
        desc="${desc//'%'/'%25'}"
        desc="${desc//$'\n'/'%0A'}"
        desc="${desc//$'\r'/'%0D'}"
        echo "::set-output name=mod_description::$desc"

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: v${{steps.changelog.outputs.mod_version}}
        release_name: Release ${{steps.changelog.outputs.mod_version}}
        body: ${{steps.changelog.outputs.mod_description}}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./Aragas.CastleTownWithHorse.zip
        asset_name: Aragas.CastleTownWithHorse.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
